@import url('https://fonts.googleapis.com/css?family=Roboto:100,300,400,500,700');

* {
  margin: 0;
  padding: 0;
}

a {
  text-decoration: none;
}

body {
  margin: 0;
  padding: 0;
  font-family: Roboto, sans-serif;
  //background: url("../fon.jpg");
  -webkit-background-size: cover;
  background-size: cover;
}

.dws-wrapper {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  display: flex;
  height: 100vh;
  justify-content: center;
  align-items: center;
}

.dws-form {
  background: rgba(255, 255, 255, 0.2);
  padding: 10px;
  a {
    text-decoration: none;
    transition: 0.5s;
    color: #298cad;
    &:hover {
      color: #36d2ff;
    }
  }
  ul {
    list-style: none;
    padding: 0;
    margin: 0;
  }
  input {
    display: block;
    width: 100%;
  }
}

.tab {
  &::before {
    content: "\f090";
    font-family: 'fontawesome', sans-serif;
    font-size: 24px;
    margin-right: 7px;
    font-weight: normal;
  }
}

.registration::before {
  content: "\f234";
}

.tab-form {
  background: #fff;
  display: block;
  padding: 30px 20px 20px;
  &.active {
    display: block;
  }
}

label.tab {
  color: #ffffff;
  font-weight: 600;
  padding: 15px;
  display: inline-block;
  border-radius: 3px 3px 0 0;
  margin-bottom: -1px;
  cursor: pointer;
  &.active {
    background: #fff;
    color: #1b5f75;
  }
}

.input {
  font-size: 16px;
  border: 2px solid #e9eaea;
  padding: 12px 14px;
  box-sizing: border-box;
  margin-bottom: 22px;
  color: #1e8da6;
  outline: none;
}

::-webkit-input-placeholder {
  color: #c4c9c9;
}

/* webkit */
::-moz-placeholder {
  color: #298cad;
}

/* Firefox 19+ */
:-moz-placeholder {
  color: #298cad;
}

/* Firefox 18- */
:-ms-input-placeholder {
  color: #298cad;
}

/* IE */

.social {
  display: flex;
  justify-content: space-between;
  font-size: 24px;
  a {
    width: 40px;
    height: 40px;
    display: block;
    line-height: 40px;
    text-align: center;
    + a {
      margin-top: 10px;
      display: block;
      font-size: 12px;
      text-align: center;
    }
  }
}

/* Плавающий текст */

.box-input {
  position: relative;
  input {
    border: none;
    border-bottom: 2px solid #e9eaea;
    padding: 10px 0;
    &:focus ~ label, &:valid ~ label {
      top: -20px;
      font-size: 12px;
      color: #33d3fe;
    }
  }
  label {
    position: absolute;
    top: 0;
    left: 0;
    padding-top: 10px;
    color: #c4c9c9;
    transition: .5s;
    pointer-events: none;
  }
}

a.button {
  background: #298cad;
  color: #ffffff;
  font-size: 18px;
  text-transform: uppercase;
  display: block;
  text-align: center;
  line-height: 46px;
  margin-top: 30px;
  margin-bottom: 10px;
  position: relative;
  z-index: 1;
  overflow: hidden;
  border-bottom: 4px solid #36d2ff;
  // clear click
  pointer-events: none;
  cursor: default;
  &:hover {
    color: #ffffff;
  }
}

.button {
  &::before, &::after {
    content: '';
    display: block;
    width: 100%;
    height: 100%;
    background: #28a5c4;
    position: absolute;
    top: 0;
    left: -100%;
    transition: .3s;
    z-index: -1;
  }
  &::after {
    background: #36d2ff;
    top: 100%;
    left: 0;
    transition-delay: .2s;
  }
  &:hover {
    &::before {
      left: 0;
    }
    &::after {
      top: 0;
    }
  }
}

//chekbox

.recover {
  margin-top: 15px;
  font-size: 12px;
}

label[for='ckbox'] {
  cursor: pointer;
  padding-left: 35px;
  width: 250px;
  display: block;
  position: relative;
  &::before {
    content: '';
    position: absolute;
    border: 2px solid #c4c9c9;
    width: 18px;
    height: 18px;
    top: 0;
    left: 0;
    border-radius: 3px;
    transition: 0.2s;
  }
}

#ckbox:checked + label::before {
  border-top: 2px solid transparent;
  border-left: 2px solid transparent;
  border-right: 2px solid #408cc2;
  border-bottom: 2px solid #408cc2;
  transform: rotate(40deg);
  width: 12px;
  height: 22px;
  transform-origin: 100% 100%;
  top: -4px;
  left: -5px;
}

#ckbox:not(:checked),
#ckbox:checked {
  display: none;
}

// class for js pointer events

.pointer > a {
  pointer-events: auto;
  cursor: pointer;
}
